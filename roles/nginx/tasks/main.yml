---
# tasks file for roles/nginx
#- name: Create a challenge for sample.com using a account key from a variable.
#  acme_certificate:
#    account_key_content: "{{ account_private_key }}"
#    csr: /etc/pki/cert/csr/sample.com.csr
#    dest: /etc/httpd/ssl/sample.com.crt
#  register: sample_com_challenge
#  ignore_errors: true

#- name: Let the challenge be validated and retrieve the cert and intermediate certificate
#  acme_certificate:
#    account_key_src: /etc/pki/cert/private/account.key
#    csr: /etc/pki/cert/csr/sample.com.csr
#    dest: /etc/httpd/ssl/sample.com.crt
#    fullchain_dest: /etc/httpd/ssl/sample.com-fullchain.crt
#    chain_dest: /etc/httpd/ssl/sample.com-intermediate.crt
#    data: "{{ sample_com_challenge }}"

- name: "Set Default APT NGINX Signing Key URL"
  set_fact:
    default_keysite: https://nginx.org/keys/nginx_signing.key

- name: "Set APT NGINX Signing Key URL"
  set_fact:
    keysite: "{{ nginx_signing_key | default(default_keysite) }}"

- name: "Add APT NGINX Signing Key"
  apt_key:
    url: "{{ keysite }}"

- name: Configure upstream APT repository
  apt_repository:
    repo: "{{ nginx__upstream_repository }}"
    state: present

- name: install nginx
  apt:
    name: nginx
    state: present
    update_cache: true

- name: place nginx.conf
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
  notify:
    - restart nginx

- name: ensure /etc/nginx/conf.d exists
  file:
    path: /etc/nginx/conf.d
    state: directory

- name: place default.conf
  template:
    src: default.conf.j2
    dest: /etc/nginx/conf.d/default.conf
  notify:
    - restart nginx
